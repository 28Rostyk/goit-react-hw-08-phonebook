{"version":3,"file":"static/js/747.45ed5833.chunk.js","mappings":"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","sources":["components/RegisterForm/fields.js","components/RegisterForm/initialState.js","webpack://react-homework-template/./src/components/RegisterForm/register-form.module.css?a013","components/RegisterForm/RegisterForm.jsx","webpack://react-homework-template/./src/components/RegisterPage/register-page.module.css?c453","components/RegisterPage/RegisterPage.jsx","webpack://react-homework-template/./src/shared/Button/button.module.css?ed75","shared/Button/Button.jsx","webpack://react-homework-template/./src/shared/TextField/text-field.module.css?f539","shared/TextField/TextField.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","shared/hooks/useForm.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'Name',\n    placeholder: 'User name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__AtyVK\",\"textField\":\"register-form_textField__b+2F5\"};","import TextField from '../../shared/TextField/TextField';\nimport Button from '../../shared/Button/Button';\n\nimport useForm from '../../shared/hooks/useForm';\n\nimport fields from './fields';\nimport initialState from './initialState';\n\nimport css from './register-form.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <TextField\n        className={css.textField}\n        value={name}\n        handleChange={handleChange}\n        {...fields.name}\n      />\n      <TextField\n        className={css.textField}\n        value={email}\n        handleChange={handleChange}\n        {...fields.email}\n      />\n      <TextField\n        className={css.textField}\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Register</Button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"page_title\":\"register-page_page_title__t8HKv\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { signup } from '../../redux/auth/auth-operations';\nimport { isUserLogin } from '../../redux/auth/auth-selectors';\n\nimport RegisterForm from '../RegisterForm/RegisterForm';\nimport css from './register-page.module.css';\n\nconst RegisterPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/my-contacts\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className={css.page_title}>Register page</h1>\n      <RegisterForm onSubmit={handleSignup} />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__tJ42D\"};","import styles from './button.module.css';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button type={type} className={styles.btn}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__UiQgu\",\"field\":\"text-field_field__0xPaa\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport css from './text-field.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id}>{label}</label>\n      <input className={css.field} id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["name","type","required","label","placeholder","email","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","css","TextField","value","fields","Button","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","signup","children","styles","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","id","useMemo","nanoid","htmlFor","onChange","useState","setState","useCallback","prevState","e","preventDefault","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}